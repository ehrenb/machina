version: '3'
services:
  rabbitmq:
    image: rabbitmq:3.9-management
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
#      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit heartbeat 0 log_levels [{connection,debug}]"
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - machinanet

  orientdb:
    image: orientdb:3.2
    ports:
      - 2424:2424
      - 2480:2480
    environment:
      ORIENTDB_ROOT_PASSWORD: "root"
    volumes:
      - orientdb-data:/orientdb/databases
    networks:
      - machinanet

  base-alpine:
    build: 
      context: ./images/machina-base
      dockerfile: Dockerfile.alpine
      args:
        - BRANCH=${BRANCH}
    image: machina/base-alpine
    command: echo 'scaled'

  base-ubuntu:
    build:
      context: ./images/machina-base
      dockerfile: Dockerfile.ubuntu
      args:
        - BRANCH=${BRANCH}
    image: machina/base-ubuntu
    command: echo 'scaled'

  identifier:
    depends_on:
      - base-alpine
    build:
      context: ./images/machina-identifier
    image: machina/identifier
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  zipanalyzer:
    depends_on:
      - base-alpine
    build: 
      context: ./images/machina-zip
    image: machina/zip
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  jaranalyzer:
    depends_on:
      - base-alpine
    build: 
      context: ./images/machina-jar
    image: machina/jar
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  androguardanalysis:
    depends_on:
      - base-alpine
    build: 
      context: ./images/machina-androguard
    image: machina/androguard
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  findurls:
    depends_on:
      - base-alpine
    build: 
      context: ./images/machina-findurls
    image: machina/findurls
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  exif:
    depends_on:
      - base-alpine
    build:
      context: ./images/machina-exif
    image: machina/exif
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  gzip:
    depends_on:
      - base-alpine
    build:
      context: ./images/machina-gzip
    image: machina/gzip
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  tar:
    depends_on:
      - base-alpine
    build:
      context: ./images/machina-tar
    image: machina/tar
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  ssdeepanalysis:
    depends_on:
      - base-ubuntu
    build:
      context: ./images/machina-ssdeep
    image: machina/ssdeep
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

  similarityanalysis:
    depends_on:
      - base-ubuntu
    build:
      context: ./images/machina-ssdeep
    image: machina/ssdeep
    volumes:
      - ./data:/data
      - ./configs:/configs
      - ./schemas:/schemas
    command:
      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
        && python3 src/run.py"
    networks:
      - machinanet

#  contenturianalysis:
#    depends_on:
#      - base-alpine
#    build:
#      context: ./images/machina-content-uri-analysis
#    image: machina/content-uri-analysis
#    volumes:
#      - ./data:/data
#      - ./configs:/configs
#      - ./schemas:/schemas
#      - /var/run/docker.sock:/var/run/docker.sock # This worker requires the ability to reach the host docker daemon. Maybe in the future, this could be removed by having a pool of standby emulators in containers
#    command:
#      bash -c "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh orientdb:2424
#        && python3 images/machina-tar/src/run.py"
#    networks:
#      - machinanet


volumes:
  orientdb-data:

networks:
    machinanet:
      driver: bridge
